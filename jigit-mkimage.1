.TH JIGIT-MKIMAGE 1 "November 2019" "Jigit jigdo tools"
.SH NAME
jigit-mkimage \- Create an ISO image from jigdo files
.SH SYNOPSIS
.B jigit-mkimage
\fI\-j jigdo\fR \fI\-t template\fR
[\fIoptions\fR]... 
.PP
.B jigit-mkimage
\fI\-t template\fR \-z
[\fIoptions\fR]... 
.PP
.B jigit-mkimage
\fI\-f md5\-list\fR \fI\-t template\fR \fI\-M missing\-list\fR
[\fIoptions\fR]... 
.PP
.B jigit-mkimage
\fI\-F sha256\-list\fR \fI\-t template\fR \fI\-M missing\-list\fR
[\fIoptions\fR]... 
.SH DESCRIPTION
.PP
jigit-mkimage knows how to parse a jigdo template file, commonly used
when creating Debian CDs and DVDs. It can be used to actually convert
a template file and associated files into an ISO image (hence the name
jigit-mkimage), or with some command line options it will output useful
information about the template file instead.
.TP
\fB\-t template file\fR
The jigdo .template file is the most important thing that jigit-mkimage
needs, and must be specified for all operations.
.TP
\fB\-j jigdo file\fR
The jigdo .jigdo file will normally acompany the .template file. To
rebuild the image you must specify \fBat least\fR one of the jigdo file and
an MD5 file (\fB\-f\fR).
.TP
\fB\-f MD5 file\fR
A file listing files available locally and their MD5 sums, in the same
format as used by genisoimage:
.sp
.RS +.2i
.ta 2.0i 2.0i 5.0i
.nf
MD5sum   File size  Path
32 chars 12 chars   to end of line
.fi
.RE
.IP
.PP
The MD5sum must be written in standard hexadecimal notation, the
file size must list the size of the file in bytes, and the path
must list the absolute path to the file. For example:
.sp
.nf
00006dcd58ff0756c36d2efae21be376         14736  /mirror/debian/file1
000635c69b254a1be8badcec3a8d05c1        211822  /mirror/debian/file2
00083436a3899a09633fc1026ef1e66e         22762  /mirror/debian/file3
.fi
.PP
A SHA256 file uses a similar format, but needs more space for the
bigger checksum output (64 characters rather than 32).
.PP
To rebuild an image you must specify \fBat least\fR one of the
MD5/SHA256 file and a jigdo file (\fB\-j\fR).
.TP
\fB\-m item=path\fR
Used in conjunction with a jigdo file; specify where jigit-mkimage should
look on the local filesystem to find the files it needs to make an
image. (e.g. "Debian=/mirror/debian").
.TP
\fB\-M missing file\fR
If you're not sure if you have all the files needs to create an image,
specify \fBboth\fR the jigdo file and an MD5/SHA256 file along with the
template file and \-M <file>. jigit-mkimage will check to see that all the
files are available \fBinstead of\fR building the image. Any files
that are missing will be listed in the file specified here. See jigit
for usage examples.
.TP
\fB\-v\fR
Make jigit-mkimage more verbose. Additional -v arguments will make it
more verbose again. Default level is 0 (almost no output). 1 will
print progress in % while the image is being created; 2 will list
every file and data block that is appended to the image.
.TP
\fB\-l logfile\fR
jigit-mkimage will normally write to stderr when it reports
progress. Specify a logfile (or /dev/null) if you want it elsewhere.
.TP
\fB\-O\fR
Skip checking the validity of specified jigdo files. jigit-mkimage will
normally check for the "JigsawDownload" header as a sanity check, but
some very old jigdo files produced by Debian pre-dated the addition of
this header.
.TP
\fB\-o outfile\fR
jigit-mkimage will normally write the ISO image to stdout, ready for piping
into cdrecord or to iso-image.pl. Specify an output filename if you
want it written to disk instead.
.TP
\fB\-q\fR
jigit-mkimage will normally check the MD5/SHA256 sum of every file it
reads and writes, and will fail if it finds any mismatches. Specify
\fB-q\fR to tell it not to. This will normally run more quickly, but
can leave you with a broken image so is \fBPOTENTIALLY
DANGEROUS\fR. Use with care!
.TP
\fB\-s start offset\fR
Rather than start at the beginning of the image, skip to the specified
offset and start output there. Probably only useful in iso-image.pl
when resuming a download. Specifying a non-zero offset also implies
\fB-q\fR, as it's difficult to check MD5/SHA256 sums when you're not
checking the whole image.
\fB\-e end offset\fR
Rather than end at the end of the image, stop at the specified
offset. Probably only useful in iso-image.pl when resuming a
download. Specifying an end offset also implies \fB-q\fR, as it's
difficult to check MD5/SHA256 sums when you're not checking the whole image.
.TP
\fB\-z\fR
Simply parse the template file and print the size of the image that
would be generated, in bytes. Only needs the template file to be
specified, any other arguments will ignored.
.SH "EXAMPLES"
.TP
\fBjigit-mkimage -f MD5 -j test.jigdo -t test.template -M missing\fR
Read in the files MD5, test.jigdo and test.template and check if all
the needed files are available. If any are missing, list them in missing.
.TP
\fBjigit-mkimage -z -t test.template\fR
Find out how big the ISO image would be from expanding test.template.
.TP
\fBjigit-mkimage -v -f MD5 -t test.template -o test.iso\fR
Build the iso image in test.iso, using files listed in MD5 to fill in
what's needed by the template file test.template. Show progress as the
image is built.
.SH "SEE ALSO"
\fBjigdo-file\fP(1), \fBjigit\fP(1), \fBjigsum\fP(1) and \fBjigdump\fP(1).
.SH "COPYRIGHT"
Copyright 2004-2019 Steve McIntyre (steve@einval.com)
.PP
jigit-mkimage may be copied under the terms and conditions of version 2
of the GNU General Public License, as published by the Free
Software Foundation (Cambridge, MA, USA).
.SH "AUTHOR"
Written by Steve McIntyre (steve@einval.com)
